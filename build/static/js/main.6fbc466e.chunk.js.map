{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","className","content","type","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","href","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","newNotes","console","log","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","class","placeholder","aria-label","aria-describedby","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fbc466e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance, deleteNote }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='w-75 float-start'>\n      <div className=\"input-group\">\n        <div className='w-75'>{note.content}</div>\n        <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleImportance}>{label}</button>\n        <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={deleteNote}>x</button>\n      </div>\n      {/* <button onClick={toggleImportance}>{label}</button>\n      <button onClick={toggleImportance}>x</button> */}\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React from \"react\"\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div className='mx-5' style={footerStyle}>\n        <br />\n        <em>Notes app, by Javier Ramos (<a href=\"mailto:jiramos87@gmail.com\">jiramos87@gmail.com</a>), as an assignment for the Fullstack open course by the Department of Computer Science, University of Helsinki 2021</em>\n      </div>\n    )\n}\n\nexport default Footer\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteNote = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteNote }","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport '@popperjs/core'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then(initialNotes => {\n\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n   \n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const deleteNote = id => {\n    noteService\n      .deleteNote(id)\n      .then(newNotes => {\n        console.log(typeof(newNotes))\n        console.log(newNotes)\n        setNotes(newNotes)\n      })\n      .catch(error => {\n        setErrorMessage(error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div className='d-flex flex-row justify-content-center align-items-center'>\n      <div className='col-4 d-flex flex-column justify-content-center align-items-center mt-3 border rounded bg-light mx-5'>\n        <h1 className='my-2'>Notes</h1>\n        <Notification message={errorMessage} />\n        <div>\n          <button className='btn border rounded bg-warning my-4' onClick={() => setShowAll(!showAll)}>\n            show {showAll ? 'important' : 'all' }\n          </button>\n        </div>\n        <ul>\n          {notesToShow.map(note =>\n            <Note key={note.id}\n                  note={note} \n                  toggleImportance={() => toggleImportanceOf(note.id)} \n                  deleteNote={() => deleteNote(note.id)} />\n          )}\n        </ul>\n        <form onSubmit={addNote}>\n          <div class=\"input-group mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"note content...\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"\n                  value={newNote} onChange={handleNoteChange} />\n            <button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-addon2\">Save</button>\n          </div>\n          {/* <input className='input' value={newNote} onChange={handleNoteChange} />\n          <button className='btn btn-secondary' type=\"submit\">save</button> */}\n        </form> \n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}