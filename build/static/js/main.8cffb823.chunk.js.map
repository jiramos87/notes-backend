{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","content","onClick","Notification","message","className","Footer","style","color","fontStyle","fontSize","href","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","noteService","newNotes","catch","error","setTimeout","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cffb823.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance, deleteNote }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n      <button onClick={deleteNote}>x</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React from \"react\"\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Notes app, by Javier Ramos (<a href=\"mailto:jiramos87@gmail.com\">jiramos87@gmail.com</a>), as an assignment for the Fullstack open course by the Department of Computer Science, University of Helsinki 2021</em>\n      </div>\n    )\n}\n\nexport default Footer\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteNote = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteNote }","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const deleteNote = id => {\n    noteService\n      .deleteNote(id)\n      .then(newNotes => {\n        setNotes(newNotes)\n      })\n      .catch(error => {\n        setErrorMessage(error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then(initialNotes => {\n\n      setNotes(initialNotes)\n    })\n  }, [deleteNote])\n\n  const addNote = (event) => {\n    event.preventDefault()\n   \n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id}\n                note={note} \n                toggleImportance={() => toggleImportanceOf(note.id)} \n                deleteNote={() => deleteNote(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form> \n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}